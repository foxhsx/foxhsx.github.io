<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Dify on 三金</title>
        <link>//localhost:1313/tags/dify/</link>
        <description>Recent content in Dify on 三金</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Coder 小站</copyright>
        <lastBuildDate>Thu, 11 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="//localhost:1313/tags/dify/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>轻量 dify2openai: 支持转换 Dify 所有的 API</title>
        <link>//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/</link>
        <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/</guid>
        <description>&lt;p&gt;之前介绍过 one-api 的下游项目——New API，它支持将 Dify 的 API 转换为标准的 OpenAI 的 API 格式。&lt;/p&gt;
&lt;p&gt;不过在写《&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/Q9dVgGE5PzyXc82DiOkNGQ?token=625489712&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;通过 NewAPI 接入 Dify 后能支持什么？&lt;/a&gt;》这篇文章时，测试还不支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AI Agent&lt;/li&gt;
&lt;li&gt;Workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至于「文本生成应用」有没有支持，当时忘了测。&lt;/p&gt;
&lt;p&gt;而今天要介绍的开源项目 dify2openai 则是支持了 Dify 应用的所有 API，且只需要启动一个 node 服务就 OK，我们一起来看一下～&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;项目地址：&lt;a class=&#34;link&#34; href=&#34;https://github.com/fatwang2/dify2openai&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装
&lt;/h3&gt;&lt;p&gt;首先拉去项目到本地：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/fatwang2/dify2openai.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后作者这边提供了两种启动方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地使用 pnpm 启动&lt;/li&gt;
&lt;li&gt;本地构建镜像启动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这边会先介绍环境变量，然后再来看启动方式。&lt;/p&gt;
&lt;h3 id=&#34;环境变量说明&#34;&gt;环境变量说明
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;DIFY_API_URL：Dify 服务的 API 地址，默认是官方地址，必填项；&lt;/li&gt;
&lt;li&gt;BOT_TYPE：要接入应用的类型，支持 Chat\Completion\Workflow，默认是 Chat，必填项；&lt;/li&gt;
&lt;li&gt;INPUT_VARIABLE：如果要接入工作流的话，需要配置这个环境变量，是开始节点中设置的变量，比如 query 之类的；&lt;/li&gt;
&lt;li&gt;OUTPUT_VARIABLE：同样是使用工作流时需要设置的，输出结果的变量，一般是 text；&lt;/li&gt;
&lt;li&gt;MODELS_NAME：模型名称，默认是 dify；&lt;/li&gt;
&lt;li&gt;PORT：服务端口，默认 3000。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;启动方式&#34;&gt;启动方式
&lt;/h3&gt;&lt;h3 id=&#34;使用-pnpm-启动----二开推荐&#34;&gt;使用 pnpm 启动 &amp;ndash; 二开推荐
&lt;/h3&gt;&lt;p&gt;使用 pnpm 命令，对应就需要安装 node 环境，如何安装可以自行百度/Google，然后使用 npm 来安装 pnpm：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g pnpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt; 全局安装好 pnpm 之后，进到项目根目录下安装项目依赖：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装好依赖之后，先不要着急启动项目。此时还需要修改环境变量对应的文件 &lt;code&gt;.env&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv .env.template .env
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim .env
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;有两个必须设置/修改的参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DIFY_API_URL: 你 Dify 服务器的地址，默认是官方 API 地址 &lt;code&gt;https://api.dify.ai/v1&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;BOT_TYPE：你的应用类型，默认是 Chat。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置好这两个之后，就可以启动项目了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pnpm start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;项目端口默认 3000，我们在浏览器中使用 &lt;code&gt;localhost:3000&lt;/code&gt; 来检查项目是否启动。&lt;/p&gt;
&lt;h4 id=&#34;使用-docker-启动----使用推荐&#34;&gt;使用 Docker 启动 &amp;ndash; 使用推荐
&lt;/h4&gt;&lt;p&gt;该项目貌似没有提供官方镜像，不过项目根目录下有提供 Dockerfile 文件，我们也可以自己 build 镜像：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker build -t dify2openai:latest .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后使用 docker 启动容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d name dify2openapi &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --network bridge &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -p 3000:3000 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -e &lt;span class=&#34;nv&#34;&gt;DIFY_API_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;你自己的 Dify 服务地址&amp;gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -e &lt;span class=&#34;nv&#34;&gt;BOT_TYPE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Chat &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --restart always
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    dify2openai:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或者直接在项目根目录下使用 Docker Compose 一把梭，在 build 镜像之后运行容器，下面是 &lt;code&gt;docker-compose.yaml&lt;/code&gt; 文件内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3.5&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dify2openai&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;dify2openai&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dockerfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Dockerfile&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;network_mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;bridge&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;3000:3000&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;DIFY_API_URL=&amp;lt;你自己的 Dify 服务地址&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;BOT_TYPE=Chat&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行下面命令启动：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;🔔提示：如果都是通过 docker 部署的 dify 和 dify2openai，这里的 IP 请换成：&lt;code&gt;http://host.docker.internal&lt;/code&gt; 端口不变&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;测试&#34;&gt;测试
&lt;/h3&gt;&lt;p&gt;首先我们需要获取 Dify 应用的密钥，在 Dify 中你需要进入到该应用，点击右上角的「发布-访问 API」按钮或者左侧菜单栏的第二个 shell 图标之后进行获取。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/pwOGjZyOVvm96jlh0mJxWSf0tAnYuMbtSiVDO-TpA5s=.png&#34;
	width=&#34;1348&#34;
	height=&#34;464&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/pwOGjZyOVvm96jlh0mJxWSf0tAnYuMbtSiVDO-TpA5s=_hu119315729560600926.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/pwOGjZyOVvm96jlh0mJxWSf0tAnYuMbtSiVDO-TpA5s=_hu4485040571377338328.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;290&#34;
		data-flex-basis=&#34;697px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/TOo2NMnMimQmakhnnsunAR7-EYQbyjZHDhRoGyIvCLU=.png&#34;
	width=&#34;1349&#34;
	height=&#34;587&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/TOo2NMnMimQmakhnnsunAR7-EYQbyjZHDhRoGyIvCLU=_hu13850628048066080185.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/TOo2NMnMimQmakhnnsunAR7-EYQbyjZHDhRoGyIvCLU=_hu14579876776120512567.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;229&#34;
		data-flex-basis=&#34;551px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后我们依旧使用 OpenWebUI 来进行测试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;启动后在「设置-外部连接」这里配置模型：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/TNMrfy7YlP0Hi-nQ8uJv7KGR0w6MO0euYR779gCjP4w=.png&#34;
	width=&#34;1346&#34;
	height=&#34;719&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/TNMrfy7YlP0Hi-nQ8uJv7KGR0w6MO0euYR779gCjP4w=_hu16810207196218194789.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/TNMrfy7YlP0Hi-nQ8uJv7KGR0w6MO0euYR779gCjP4w=_hu11404317787001405250.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;449px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;眼尖的朋友们或许发现 OpenWebUI 的端口也是 3000，这样的话会和 dify2openai 的容器端口冲突，所以我在这里将 dify2openai 的端口改成了 3100。
1. 本地 pnpm 启动：在 &lt;code&gt;.env&lt;/code&gt; 文件中加上 PORT 参数进行修改；
2. Docker 启动，则在命令中或者 YAML 中将左侧的 3000 修改成你想要的端口。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时这里的 URL 就变成了 dify2openai 的服务地址：&lt;code&gt;IP:port&lt;/code&gt;；密钥就是刚刚我们复制下来的密钥，配置好之后保存一下即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/FlqmH5pInZj9kpqWukAbPr3HBmVQ6QjGWw44bz5p7rk=.png&#34;
	width=&#34;965&#34;
	height=&#34;700&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/FlqmH5pInZj9kpqWukAbPr3HBmVQ6QjGWw44bz5p7rk=_hu3598506657214085537.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/FlqmH5pInZj9kpqWukAbPr3HBmVQ6QjGWw44bz5p7rk=_hu1955618575451258762.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;137&#34;
		data-flex-basis=&#34;330px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;新建对话，我们按照 Dify 中提供的应用类型来分别测试一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/dk6gBRPC5SyPP5ragUF7gtjgWzFNEswoduGbysP-TKQ=.png&#34;
	width=&#34;642&#34;
	height=&#34;239&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/dk6gBRPC5SyPP5ragUF7gtjgWzFNEswoduGbysP-TKQ=_hu11785663823294858425.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/dk6gBRPC5SyPP5ragUF7gtjgWzFNEswoduGbysP-TKQ=_hu1992680084053831969.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;268&#34;
		data-flex-basis=&#34;644px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;不同的应用，对应的 BOT_TYPE 是不同的，且环境变量设置上也有差异：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;聊天助手：BOT_TYPE 是 Chat；&lt;/li&gt;
&lt;li&gt;工作流：BOT_TYPE 是 Workflow。除此之外，对于工作流而言你还需要配置 &lt;code&gt;INPUT_VARIABLE&lt;/code&gt; 和 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;文本生成应用：BOT_TYPE 是 Completion；&lt;/li&gt;
&lt;li&gt;Agent：BOT_TYPE 还是 Chat；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下是测试截图～&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;聊天助手&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/HcHPgujvh1i2Nc7jTIEwg1DqvuJ2kpWcNNjWvXV8O1U=.png&#34;
	width=&#34;1112&#34;
	height=&#34;716&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/HcHPgujvh1i2Nc7jTIEwg1DqvuJ2kpWcNNjWvXV8O1U=_hu10645673681244362557.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/HcHPgujvh1i2Nc7jTIEwg1DqvuJ2kpWcNNjWvXV8O1U=_hu10414754047137455360.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;155&#34;
		data-flex-basis=&#34;372px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工作流&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/XyfadAAsUdo785vi7nK8s0nZETM2EnaQrnIR66hTopU=.png&#34;
	width=&#34;1113&#34;
	height=&#34;718&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/XyfadAAsUdo785vi7nK8s0nZETM2EnaQrnIR66hTopU=_hu2818686907211284977.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/XyfadAAsUdo785vi7nK8s0nZETM2EnaQrnIR66hTopU=_hu2712265843545727922.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;155&#34;
		data-flex-basis=&#34;372px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文本生成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/WTkUCtL321S63yHsNnZwoDRsGGti4u0IH78TP6jQ4qk=.png&#34;
	width=&#34;1107&#34;
	height=&#34;709&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/WTkUCtL321S63yHsNnZwoDRsGGti4u0IH78TP6jQ4qk=_hu4321900327686068541.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/WTkUCtL321S63yHsNnZwoDRsGGti4u0IH78TP6jQ4qk=_hu4735119536601383654.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;374px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Agent&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/aonaeCEWalWNv0yfc20H0FqoVRq-sGcYMsDwx0xMzhk=.png&#34;
	width=&#34;1117&#34;
	height=&#34;714&#34;
	srcset=&#34;//localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/aonaeCEWalWNv0yfc20H0FqoVRq-sGcYMsDwx0xMzhk=_hu10469079719248443869.png 480w, //localhost:1313/p/%E8%BD%BB%E9%87%8F-dify2openai-%E6%94%AF%E6%8C%81%E8%BD%AC%E6%8D%A2-dify-%E6%89%80%E6%9C%89%E7%9A%84-api/assets/aonaeCEWalWNv0yfc20H0FqoVRq-sGcYMsDwx0xMzhk=_hu6927113022016120399.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;375px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结
&lt;/h3&gt;&lt;p&gt;dify2openai 可以将 Dify 应用的 API 转为 OpenAI 的 API，方便大家将自己的 Dify 应用接入到其他的 AI 应用中去，作为一个轻量服务，它所占的资源极少，很适合有次需求的小伙伴。&lt;/p&gt;
&lt;p&gt;不过唯一的缺点就是，一个服务只能支持一个应用。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
